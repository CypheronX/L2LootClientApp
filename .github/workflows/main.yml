name: Build and Release

on:
  push:
    tags:
      - v*
    branches:
      - test
  workflow_dispatch:

jobs:
  build-prod:
    name: Build Production Release
    runs-on: windows-latest
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
    steps:
      - name: Checkout private repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Change wrapper permission
        run: chmod +x ./gradlew

      - name: Get Version Name
        id: get_version
        shell: bash
        run: |
          source version.properties
          echo "version_name=${versionMajor}.${versionMinor}.${versionPatch}" >> $GITHUB_OUTPUT

      - name: Build Production MSI Installer
        env:
          FIREBASE_ANALYTICS_URL: ${{ secrets.FIREBASE_ANALYTICS_URL }}
          SELLABLE_ITEMS_URL: ${{ secrets.SELLABLE_ITEMS_URL }}
          ANONYMOUS_AUTH_URL: ${{ secrets.ANONYMOUS_AUTH_URL }}
          EXTERNAL_LINKS_URL: ${{ secrets.EXTERNAL_LINKS_URL }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
        shell: bash
        run: ./gradlew clean packageReleaseMsi -Pbuildkonfig.flavor=prod


      - name: Upload Release to Public Repository
        uses: softprops/action-gh-release@v2
        with:
          repository: aleksbalev/L2LootClientAppReleases
          token: ${{ secrets.PUBLIC_REPO_TOKEN }}
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: |
            composeApp/build/compose/binaries/main-release/msi/L2Loot-${{ steps.get_version.outputs.version_name }}.msi
          body: |
            ## L2Loot ${{ github.ref_name }}
            
            ### Installation
            
            **Windows MSI Installer (Recommended):**
            - Download `L2Loot-${{ steps.get_version.outputs.version_name }}.msi`
            - Run the installer and follow the setup wizard
            - The app will be installed and a desktop shortcut will be created
            
            **Windows EXE Portable:**
            - Download `L2Loot-${{ steps.get_version.outputs.version_name }}.exe`
            - Extract and run the executable
            
            ### What's New
            - Add your release notes here

  build-dev:
    name: Build Development Build
    runs-on: windows-latest
    if: github.ref == 'refs/heads/test'
    permissions:
      contents: write
    steps:
      - name: Checkout private repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Change wrapper permission
        run: chmod +x ./gradlew

      - name: Get Version Name
        id: get_version
        shell: bash
        run: |
          source version.properties
          echo "version_name=${versionMajor}.${versionMinor}.${versionPatch}" >> $GITHUB_OUTPUT

      - name: Build Development MSI Installer
        env:
          FIREBASE_ANALYTICS_URL: ${{ secrets.FIREBASE_ANALYTICS_URL }}
          SELLABLE_ITEMS_URL: ${{ secrets.SELLABLE_ITEMS_URL }}
          ANONYMOUS_AUTH_URL: ${{ secrets.ANONYMOUS_AUTH_URL }}
          EXTERNAL_LINKS_URL: ${{ secrets.EXTERNAL_LINKS_URL }}
          FIREBASE_ANALYTICS_URL_DEV: ${{ secrets.FIREBASE_ANALYTICS_URL_DEV }}
          SELLABLE_ITEMS_URL_DEV: ${{ secrets.SELLABLE_ITEMS_URL_DEV }}
          ANONYMOUS_AUTH_URL_DEV: ${{ secrets.ANONYMOUS_AUTH_URL_DEV }}
          EXTERNAL_LINKS_URL_DEV: ${{ secrets.EXTERNAL_LINKS_URL_DEV }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
        shell: bash
        run: ./gradlew clean packageReleaseMsi -Pbuildkonfig.flavor=dev

      - name: Get Short Commit SHA
        id: commit_sha
        run: echo "short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
        shell: bash

      - name: Create Dev Release in Test Repository
        uses: softprops/action-gh-release@v2
        with:
          repository: aleksbalev/L2LootClientAppTest
          token: ${{ secrets.TEST_REPO_TOKEN }}
          tag_name: dev-v${{ steps.get_version.outputs.version_name }}-${{ steps.commit_sha.outputs.short_sha }}
          name: Dev Build v${{ steps.get_version.outputs.version_name }} (${{ steps.commit_sha.outputs.short_sha }})
          draft: false
          prerelease: true
          files: |
            composeApp/build/compose/binaries/main-release/msi/*.msi
          body: |
            ## üöß Development Build v${{ steps.get_version.outputs.version_name }}
            
            **Commit:** ${{ github.sha }}
            **Branch:** test
            **Build Date:** ${{ github.event.head_commit.timestamp }}
            
            ### ‚ö†Ô∏è Important
            This is a **development build** for testing purposes only.
            - Uses dev backend endpoints (or prod as fallback)
            - Can be installed alongside production version
            - Database stored in `%APPDATA%\L2LootDev`
            
            ### Installation
            1. Download `L2Loot Dev-${{ steps.get_version.outputs.version_name }}.msi`
            2. Run the installer
            3. App will appear as "L2Loot Dev" in Start Menu
            
            ### Recent Changes
            ${{ github.event.head_commit.message }}

      - name: Also Upload as Artifact (for quick access)
        uses: actions/upload-artifact@v4
        with:
          name: L2Loot-Dev-${{ steps.get_version.outputs.version_name }}-${{ steps.commit_sha.outputs.short_sha }}
          path: composeApp/build/compose/binaries/main-release/msi/*.msi
          retention-days: 7
